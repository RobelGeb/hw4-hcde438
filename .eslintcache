[{"C:\\Users\\robelg\\walkie\\src\\index.js":"1","C:\\Users\\robelg\\walkie\\src\\reportWebVitals.js":"2","C:\\Users\\robelg\\walkie\\src\\App.js":"3","C:\\Users\\robelg\\walkie\\src\\TextInput.js":"4","C:\\Users\\robelg\\walkie\\src\\Message.js":"5","C:\\Users\\robelg\\walkie\\src\\NamePicker.js":"6","C:\\Users\\robelg\\walkie\\src\\db.js":"7"},{"size":218,"mtime":1612256337713,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":1131,"mtime":1612855673094,"results":"11","hashOfConfig":"9"},{"size":747,"mtime":1612865601045,"results":"12","hashOfConfig":"9"},{"size":294,"mtime":1612865552581,"results":"13","hashOfConfig":"9"},{"size":849,"mtime":1612865556104,"results":"14","hashOfConfig":"9"},{"size":1587,"mtime":1612812047995,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"b8gfn6",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"18"},"C:\\Users\\robelg\\walkie\\src\\index.js",[],["34","35"],"C:\\Users\\robelg\\walkie\\src\\reportWebVitals.js",[],["36","37"],"C:\\Users\\robelg\\walkie\\src\\App.js",["38","39"],"import { useState } from 'react';\nimport './App.css';\nimport TextInput from './TextInput';\nimport Message from './Message';\nimport NamePicker from './NamePicker';\nimport {db, useDB} from './db'\n\nfunction App() {\n  const [messages, setMessages] = useState([])  \n  const [username, setUsername] = useState(\n    localStorage.getItem('username') || ''\n  )\n\n  return <div className=\"App\">\n    <header className=\"App-header\">\n      <div className=\"logo\" />\n        WALKIE\n        <NamePicker saveName={setUsername} /> \n    </header>\n    \n    <main className=\"messages\">\n      {messages.map((m,i)=> {\n        const isMe = m.name===username\n        return <Message key={i} {...m} isMe={isMe} />\n      })}\n    </main>\n\n    <TextInput\n      send={(t)=> setMessages([{text:t, name:username, date:new Date()}, ...messages])}\n    />\n\n  </div>\n}\n\nexport default App;\n//FOR FIREBASE DATABASE SUPPORT\n//LINE 9 const messages = useDB()\n//LINE 28 send={(t)=> db.send({text:t, name:username, date:new Date()})}\n//LOCAL\n//const [messages, setMessages] = useState([])\n//send={(t)=> setMessages([{text:t, name:username, date:new Date()}, ...messages])}\n","C:\\Users\\robelg\\walkie\\src\\TextInput.js",[],"C:\\Users\\robelg\\walkie\\src\\Message.js",[],"C:\\Users\\robelg\\walkie\\src\\NamePicker.js",[],"C:\\Users\\robelg\\walkie\\src\\db.js",["40"],"import {useState, useEffect} from 'react'\r\nimport firebase from \"firebase\"\r\nimport \"firebase/firestore\"\r\nimport \"firebase/storage\"\r\n\r\nlet store\r\nconst coll = 'messages'\r\n\r\nfunction useDB(room) {\r\n    const [messages, setMessages] = useState([])\r\n\r\n    function add(m) {\r\n        setMessages(current => {\r\n            const msgs = [m, ...current]\r\n            msgs.sort((a,b)=> b.date.seconds - a.date.seconds)\r\n            return msgs\r\n        })\r\n    }\r\n    function remove(id) {\r\n        setMessages(current=> current.filter(m=> m.id!==id))\r\n    }\r\n    \r\n    useEffect(() => {\r\n        const collection = room ? \r\n            store.collection(coll).where('room','==',room) :\r\n            store.collection(coll)\r\n       \r\n        collection.onSnapshot(snap=> snap.docChanges().forEach(c=> {\r\n            const {doc, type} = c\r\n            if (type==='added') add({...doc.data(),id:doc.id})\r\n            if (type==='removed') remove(doc.id)\r\n        }))\r\n    }, [])\r\n    return messages\r\n}\r\n\r\nconst db = {}\r\ndb.send = function(msg) {\r\n    return store.collection(coll).add(msg)\r\n}\r\ndb.delete = function(id) {\r\n    return store.collection(coll).doc(id).delete()\r\n}\r\n\r\nexport { db, useDB }\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCxnHdHGicbw16DmQfEbNVy7XD6ENprVNQ\",\r\n    authDomain: \"chatter2021-2b8fb.firebaseapp.com\",\r\n    projectId: \"chatter2021-2b8fb\",\r\n    storageBucket: \"chatter2021-2b8fb.appspot.com\",\r\n    messagingSenderId: \"778098356347\",\r\n    appId: \"1:778098356347:web:c396b31d7a0a5c0c6c32de\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig)\r\nstore = firebase.firestore()",{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"41","replacedBy":"45"},{"ruleId":"43","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":6,"column":9,"nodeType":"49","messageId":"50","endLine":6,"endColumn":11},{"ruleId":"47","severity":1,"message":"51","line":6,"column":13,"nodeType":"49","messageId":"50","endLine":6,"endColumn":18},{"ruleId":"52","severity":1,"message":"53","line":33,"column":8,"nodeType":"54","endLine":33,"endColumn":10,"suggestions":"55"},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],["56"],["57"],"no-unused-vars","'db' is defined but never used.","Identifier","unusedVar","'useDB' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'room'. Either include it or remove the dependency array.","ArrayExpression",["58"],"no-global-assign","no-unsafe-negation",{"desc":"59","fix":"60"},"Update the dependencies array to be: [room]",{"range":"61","text":"62"},[962,964],"[room]"]